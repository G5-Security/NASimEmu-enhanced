# Bridge scenario - middle ground between training and test templates
# Designed to help with generalization by providing intermediate values

subnets: [6-8, 6-8, 6-8, 6-8, 6-8, 6-8, 6-8, 6-8, 6-8, 6-8, 6-8, 6-8]
address_space_bounds: (13, 10)
topology: [[ 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
           [ 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
           [ 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
           [ 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0],
           [ 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0],
           [ 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0],
           [ 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0],
           [ 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0],
           [ 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0],
           [ 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1],
           [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0],
           [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1],
           [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1]]
subnet_labels:
  1: DMZ
  2: user
  3: service
  4: db
  5: dev
  6: app
  7: app2
  8: app3
  9: web
  10: office
  11: research
  12: backups

# Bridge sensitive host distribution (middle values between train and test)
sensitive_hosts:
  1: 0.0  # DMZ (same in both)
  2: 0.0  # user (same in both)
  3: 0.4  # service: 0.6(train) -> 0.4(bridge) -> 0.2(test)
  4: 0.5  # db: 1.0(train) -> 0.5(bridge) -> 0.0(test)
  5: 0.1  # dev: 0.2(train) -> 0.1(bridge) -> 0.0(test)
  6: 0.2  # app: 0.3(train) -> 0.2(bridge) -> 0.1(test)
  7: 0.15 # app2: 0.3(train) -> 0.15(bridge) -> 0.0(test)
  8: 0.35 # app3: 0.4(train) -> 0.35(bridge) -> 0.3(test)  
  9: 0.65 # web: 0.5(train) -> 0.65(bridge) -> 0.8(test)
  10: 0.1 # office: 0.2(train) -> 0.1(bridge) -> 0.0(test)
  11: 0.7 # research: 0.5(train) -> 0.7(bridge) -> 0.9(test)
  12: 0.9 # backups: 0.8(train) -> 0.9(bridge) -> 1.0(test) 0.4


os:
  - linux
  - windows

services:
  - 22_linux_ssh
  - 23_linux_telnet
  - 21_linux_vsftpd
  - 25_linux_smtp_exim
  - 389_linux_ldap
  - 2049_linux_nfs
  - 445_linux_samba
  - 5432_linux_postgres
  - 27017_linux_mongodb
  - 6379_linux_redis
  - 11211_linux_memcached
  - 5601_linux_kibana
  - 3000_linux_grafana
  - 8080_linux_tomcat_mgr
  - 8081_linux_jenkins
  - 8161_linux_activemq
  - 5900_linux_vnc
  - 69_linux_tftp
  - 53_linux_dns_bind
  - 80_linux_joomla
  - 80_linux_moodle
  - 80_linux_mediawiki
  - 80_linux_phpmyadmin
  - 3306_any_mysql
  - 445_windows_smb
  - 3389_windows_rdp
  - 5985_windows_winrm
  - 135_windows_msrpc
  - 88_windows_kerberos
  - 389_windows_ldap_ad
  - 1433_windows_mssql
  - 80_windows_iis

sensitive_services:
  - 3306_any_mysql
  - 5432_linux_postgres
  - 1433_windows_mssql

processes:
  - p_linux_polkit_pkexec
  - p_linux_sudo_misconfig
  - p_linux_suid_bin
  - p_linux_cron_root
  - p_linux_docker_sock
  - p_linux_kernel_dirty_pipe
  - p_windows_spooler
  - p_windows_unquoted_service_path
  - p_windows_weak_service_perms
  - p_windows_se_impersonate
  - p_windows_uac_bypass
  - p_windows_dll_hijack
  - p_windows_vuln_driver

# Bridge service probabilities (middle values between train and test)
service_probabilities:
  22_linux_ssh: 0.9
  23_linux_telnet: 0.1
  21_linux_vsftpd: 0.725  # 0.85(train) -> 0.725(bridge) -> 0.6(test)
  25_linux_smtp_exim: 0.725
  389_linux_ldap: 0.725
  2049_linux_nfs: 0.725
  445_linux_samba: 0.9
  5432_linux_postgres: 0.9
  27017_linux_mongodb: 0.675  # 0.85(train) -> 0.675(bridge) -> 0.5(test)
  6379_linux_redis: 0.675
  11211_linux_memcached: 0.675
  5601_linux_kibana: 0.15  # 0.2(train) -> 0.15(bridge) -> 0.1(test)
  3000_linux_grafana: 0.15
  8080_linux_tomcat_mgr: 0.725  # 0.85(train) -> 0.725(bridge) -> 0.6(test)
  8081_linux_jenkins: 0.15  # 0.2(train) -> 0.15(bridge) -> 0.1(test)
  8161_linux_activemq: 0.15
  5900_linux_vnc: 0.725
  69_linux_tftp: 0.1
  53_linux_dns_bind: 0.9
  80_linux_joomla: 0.725
  80_linux_moodle: 0.15
  80_linux_mediawiki: 0.725
  80_linux_phpmyadmin: 0.725
  3306_any_mysql: 0.9
  445_windows_smb: 0.9
  3389_windows_rdp: 0.725
  5985_windows_winrm: 0.725
  135_windows_msrpc: 0.725
  88_windows_kerberos: 0.725
  389_windows_ldap_ad: 0.725
  1433_windows_mssql: 0.9
  80_windows_iis: 0.15

# Bridge process probabilities (middle values between train and test)
process_probabilities:
  p_linux_polkit_pkexec: 0.5  # 0.8(train) -> 0.5(bridge) -> 0.2(test)
  p_linux_sudo_misconfig: 0.425  # 0.7(train) -> 0.425(bridge) -> 0.15(test)
  p_linux_suid_bin: 0.15  # 0.2(train) -> 0.15(bridge) -> 0.1(test)
  p_linux_cron_root: 0.2  # 0.25(train) -> 0.2(bridge) -> 0.15(test)
  p_linux_docker_sock: 0.125  # 0.15(train) -> 0.125(bridge) -> 0.1(test)
  p_linux_kernel_dirty_pipe: 0.1
  p_windows_spooler: 0.85  # 0.8(train) -> 0.85(bridge) -> 0.9(test)
  p_windows_unquoted_service_path: 0.75  # 0.7(train) -> 0.75(bridge) -> 0.8(test)
  p_windows_weak_service_perms: 0.35  # 0.2(train) -> 0.35(bridge) -> 0.5(test)
  p_windows_se_impersonate: 0.275  # 0.15(train) -> 0.275(bridge) -> 0.4(test)
  p_windows_uac_bypass: 0.225  # 0.15(train) -> 0.225(bridge) -> 0.3(test)
  p_windows_dll_hijack: 0.15  # 0.1(train) -> 0.15(bridge) -> 0.2(test)
  p_windows_vuln_driver: 0.15

# Bridge exploit configurations (middle values between train and test)
exploits:
  e_vsftpd:
    service: 21_linux_vsftpd
    os: linux
    prob: 0.75  # 0.9(train) -> 0.75(bridge) -> 0.6(test) 
    cost: 1.5   # 1(train) -> 1.5(bridge) -> 2(test)
    access: user
  e_tomcat_mgr:
    service: 8080_linux_tomcat_mgr
    os: linux
    prob: 0.65  # 0.8(train) -> 0.65(bridge) -> 0.5(test)
    cost: 2.5   # 2(train) -> 2.5(bridge) -> 3(test)
    access: user
  e_jenkins:
    service: 8081_linux_jenkins
    os: linux
    prob: 0.55  # 0.7(train) -> 0.55(bridge) -> 0.4(test)
    cost: 2.5   # 2(train) -> 2.5(bridge) -> 3(test)
    access: user
  e_smb_win:
    service: 445_windows_smb
    os: windows
    prob: 0.65  # 0.8(train) -> 0.65(bridge) -> 0.5(test)
    cost: 2.5   # 2(train) -> 2.5(bridge) -> 3(test)
    access: user
  e_rdp:
    service: 3389_windows_rdp
    os: windows
    prob: 0.5   # 0.6(train) -> 0.5(bridge) -> 0.4(test)
    cost: 2.5   # 2(train) -> 2.5(bridge) -> 3(test)
    access: user
  e_mysql:
    service: 3306_any_mysql
    os: none
    prob: 0.85  # 1.0(train) -> 0.85(bridge) -> 0.7(test)
    cost: 2.0   # 1(train) -> 2.0(bridge) -> 3(test)
    access: root
  e_mssql:
    service: 1433_windows_mssql
    os: windows
    prob: 0.65  # 0.8(train) -> 0.65(bridge) -> 0.5(test)
    cost: 2.5   # 2(train) -> 2.5(bridge) -> 3(test)
    access: user
  e_postgres:
    service: 5432_linux_postgres
    os: linux
    prob: 0.725 # 0.85(train) -> 0.725(bridge) -> 0.6(test)
    cost: 2.5   # 2(train) -> 2.5(bridge) -> 3(test)
    access: user

# Bridge privilege escalation (middle values between train and test)
privilege_escalation:
  pe_polkit:
    process: p_linux_polkit_pkexec
    os: linux
    prob: 0.8
    cost: 1
    access: root
  pe_polkit_any:
    process: p_linux_polkit_pkexec
    os: none
    prob: 0.7
    cost: 1
    access: root
  pe_sudo:
    process: p_linux_sudo_misconfig
    os: linux
    prob: 0.7
    cost: 1
    access: root
  pe_sudo_any:
    process: p_linux_sudo_misconfig
    os: none
    prob: 0.6
    cost: 1
    access: root
  pe_spooler:
    process: p_windows_spooler
    os: windows
    prob: 0.8
    cost: 1
    access: root
  pe_unquoted:
    process: p_windows_unquoted_service_path
    os: windows
    prob: 0.7
    cost: 1
    access: root

service_scan_cost: 1
os_scan_cost: 1
subnet_scan_cost: 1
process_scan_cost: 1

# Randomize host configs per episode, filtered by OS and skewed count distribution
host_configurations: _random

# Allow all inter-subnet communications along topology
firewall: _subnets

# Curriculum Learning Configuration - Gradual Progression for Stealth Learning
# Stage 1: Baseline (Epochs 0-49) - Learn basic strategy without interference
# Stage 2: Medium Difficulty (Epochs 50-79) - Introduce light realism
# Stage 3: Full Difficulty (Epochs 80+) - Balanced realism for stealth training
curriculum:
  enabled: true
  stages:
    # Stage 1: Baseline - No realism (Epochs 0-49) - Learn basic strategy
    - name: "baseline"
      start_epoch: 0
      end_epoch: 49
      ids:
        enabled: false
      scan_noise:
        service_scan:
          false_positive_rate: 0.0
          false_negative_rate: 0.0
        os_scan:
          false_positive_rate: 0.0
          false_negative_rate: 0.0
        process_scan:
          false_positive_rate: 0.0
          false_negative_rate: 0.0
      network_reliability:
        timeout_probability: 0.0
        affected_actions: []
      service_dynamics:
        churn_probability: 0.0
        affected_services: []
    
    # Stage 2: Medium difficulty (Epochs 50-79) - Light realism introduction
    - name: "medium_difficulty"
      start_epoch: 50
      end_epoch: 79
      ids:
        enabled: true
        detection_decay: 0.99  # Slow decay = forgiving
        base_thresholds: [0.75, 0.92]  # High thresholds = harder to trigger
        response_types:
          quarantine: 0.05  # Very low quarantine
          patch: 0.25
          monitor: 0.70  # Mostly just monitoring
        failed_exploit_multiplier: 2.0
        detection_increase:
          subnet_scan: 0.008
          service_scan: 0.02
          os_scan: 0.012
          process_scan: 0.012
          exploit_failed: 0.06
          exploit_success: 0.03
          privesc_failed: 0.08
          privesc_success: 0.04
      scan_noise:
        service_scan:
          false_positive_rate: 0.02  # 2% slight noise
          false_negative_rate: 0.03  # 3% slight noise
        os_scan:
          false_positive_rate: 0.01  # 1% minimal noise
          false_negative_rate: 0.02  # 2% minimal noise
        process_scan:
          false_positive_rate: 0.03  # 3% slight noise
          false_negative_rate: 0.05  # 5% slight noise
      network_reliability:
        timeout_probability: 0.01  # 1% very rare timeouts
        affected_actions: ["exploit", "privilege_escalation"]
        retry_cost: 0
        timeout_types:
          - type: "packet_loss"
            probability: 0.8
            duration: 1
          - type: "network_congestion"
            probability: 0.2
            duration: [2, 3]
      service_dynamics:
        churn_probability: 0.005  # 0.5% very rare churn
        affected_services: ["80_linux_joomla", "8080_linux_tomcat_mgr", "3306_any_mysql"]
        restart_delay: 8
        churn_types:
          - type: "crash_restart"
            probability: 0.9
            down_duration: [4, 10]
          - type: "maintenance"
            probability: 0.1
            down_duration: [12, 20]
    
    # Stage 3: Full difficulty (Epochs 80+) - Balanced realism for stealth training
    - name: "full_difficulty"
      start_epoch: 80
      end_epoch: 999999  # Effectively infinite
      ids:
        enabled: true
        detection_decay: 0.98  # Moderate decay
        base_thresholds: [0.65, 0.88]  # Moderate thresholds - not too sensitive
        response_types:
          quarantine: 0.10  # Low quarantine chance
          patch: 0.35
          monitor: 0.55
        failed_exploit_multiplier: 2.5
        detection_increase:
          subnet_scan: 0.012
          service_scan: 0.03
          os_scan: 0.018
          process_scan: 0.018
          exploit_failed: 0.09
          exploit_success: 0.05
          privesc_failed: 0.12
          privesc_success: 0.06
      scan_noise:
        service_scan:
          false_positive_rate: 0.03  # 3% moderate noise for stealth learning
          false_negative_rate: 0.05  # 5% moderate noise
        os_scan:
          false_positive_rate: 0.015  # 1.5% light noise
          false_negative_rate: 0.03   # 3% light noise
        process_scan:
          false_positive_rate: 0.04  # 4% moderate noise
          false_negative_rate: 0.07  # 7% moderate noise
      network_reliability:
        timeout_probability: 0.015  # 1.5% occasional timeouts
        affected_actions: ["exploit", "privilege_escalation"]
        retry_cost: 0
        timeout_types:
          - type: "packet_loss"
            probability: 0.7
            duration: 1
          - type: "network_congestion"
            probability: 0.25
            duration: [2, 4]
          - type: "routing_issue"
            probability: 0.05
            duration: [4, 7]
      service_dynamics:
        churn_probability: 0.01  # 1% light churn - not too disruptive
        affected_services: ["80_linux_joomla", "8080_linux_tomcat_mgr", "8081_linux_jenkins", "3306_any_mysql", "5432_linux_postgres", "27017_linux_mongodb"]
        restart_delay: 10
        churn_types:
          - type: "crash_restart"
            probability: 0.85  # Most services restart quickly
            down_duration: [5, 12]
          - type: "maintenance"
            probability: 0.15  # Some longer maintenance
            down_duration: [15, 30]

