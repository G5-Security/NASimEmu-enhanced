{
  "metadata": {
    "script_version": 2,
    "cwd": "/home/T2430409/NASimEmu-enhanced/NASimEmu-agents",
    "timestamp": "2025-08-21T20:10:41.435934Z",
    "num_runs": 3,
    "description": "70% Train scenario 30% Test scenario. Basic data augmentation (domain randomization) model with observation masking for noise ",
    "train_cmd": "python main.py ../scenarios/corp_100hosts_dynamic.v2.yaml --eval -load_model wandb/latest-run/files/model.pt -device cpu -cpus 8 -net_class NASimNetGNN_LSTM -use_a_t -episode_step_limit 400 -observation_format graph_v2 -mp_iterations 3 -augment_with_action --feature_dropout_p 0.0 --dr_prob_jitter 0.0 --dr_cost_jitter 0.0 --dr_scan_cost_jitter 0.0",
    "test_cmd": "python main.py ../scenarios/corp_100hosts_dynamic_test.v2.yaml --eval -load_model wandb/latest-run/files/model.pt -device cpu -cpus 8 -net_class NASimNetGNN_LSTM -use_a_t -episode_step_limit 400 -observation_format graph_v2 -mp_iterations 3 -augment_with_action --feature_dropout_p 0.0 --dr_prob_jitter 0.0 --dr_cost_jitter 0.0 --dr_scan_cost_jitter 0.0",
    "train_cmd_parsed": {
      "raw": "python main.py ../scenarios/corp_100hosts_dynamic.v2.yaml --eval -load_model wandb/latest-run/files/model.pt -device cpu -cpus 8 -net_class NASimNetGNN_LSTM -use_a_t -episode_step_limit 400 -observation_format graph_v2 -mp_iterations 3 -augment_with_action --feature_dropout_p 0.0 --dr_prob_jitter 0.0 --dr_cost_jitter 0.0 --dr_scan_cost_jitter 0.0",
      "python": "python",
      "entry": "main.py",
      "scenario_arg": "../scenarios/corp_100hosts_dynamic.v2.yaml",
      "flags": {
        "eval": true,
        "load_model": "wandb/latest-run/files/model.pt",
        "device": "cpu",
        "cpus": "8",
        "net_class": "NASimNetGNN_LSTM",
        "use_a_t": true,
        "episode_step_limit": "400",
        "observation_format": "graph_v2",
        "mp_iterations": "3",
        "augment_with_action": true,
        "feature_dropout_p": "0.0",
        "dr_prob_jitter": "0.0",
        "dr_cost_jitter": "0.0",
        "dr_scan_cost_jitter": "0.0"
      },
      "bool_flags": [
        "eval",
        "use_a_t",
        "augment_with_action"
      ],
      "net_class": "NASimNetGNN_LSTM",
      "episode_step_limit": "400",
      "mp_iterations": "3",
      "observation_format": "graph_v2",
      "device": "cpu",
      "cpus": "8",
      "feature_dropout_p": "0.0",
      "dr_prob_jitter": "0.0",
      "dr_cost_jitter": "0.0",
      "dr_scan_cost_jitter": "0.0",
      "load_model": "wandb/latest-run/files/model.pt",
      "use_a_t": true,
      "augment_with_action": true,
      "eval": true
    },
    "test_cmd_parsed": {
      "raw": "python main.py ../scenarios/corp_100hosts_dynamic_test.v2.yaml --eval -load_model wandb/latest-run/files/model.pt -device cpu -cpus 8 -net_class NASimNetGNN_LSTM -use_a_t -episode_step_limit 400 -observation_format graph_v2 -mp_iterations 3 -augment_with_action --feature_dropout_p 0.0 --dr_prob_jitter 0.0 --dr_cost_jitter 0.0 --dr_scan_cost_jitter 0.0",
      "python": "python",
      "entry": "main.py",
      "scenario_arg": "../scenarios/corp_100hosts_dynamic_test.v2.yaml",
      "flags": {
        "eval": true,
        "load_model": "wandb/latest-run/files/model.pt",
        "device": "cpu",
        "cpus": "8",
        "net_class": "NASimNetGNN_LSTM",
        "use_a_t": true,
        "episode_step_limit": "400",
        "observation_format": "graph_v2",
        "mp_iterations": "3",
        "augment_with_action": true,
        "feature_dropout_p": "0.0",
        "dr_prob_jitter": "0.0",
        "dr_cost_jitter": "0.0",
        "dr_scan_cost_jitter": "0.0"
      },
      "bool_flags": [
        "eval",
        "use_a_t",
        "augment_with_action"
      ],
      "net_class": "NASimNetGNN_LSTM",
      "episode_step_limit": "400",
      "mp_iterations": "3",
      "observation_format": "graph_v2",
      "device": "cpu",
      "cpus": "8",
      "feature_dropout_p": "0.0",
      "dr_prob_jitter": "0.0",
      "dr_cost_jitter": "0.0",
      "dr_scan_cost_jitter": "0.0",
      "load_model": "wandb/latest-run/files/model.pt",
      "use_a_t": true,
      "augment_with_action": true,
      "eval": true
    }
  },
  "train": {
    "runs": [
      {
        "reward_avg": 1.40251762767451,
        "reward_avg_episodes": 294.8958740234375,
        "eplen_avg": 210.2625,
        "captured_avg": 31.78125,
        "num_parameters": 119383,
        "model_loaded_path": "wandb/latest-run/files/model.pt",
        "stdout_tail": "  (action_select): Linear(in_features=64, out_features=18, bias=True)\n  (value_function): Linear(in_features=64, out_features=1, bias=True)\n)\nNumber of parameters: 119383\nModel loaded: wandb/latest-run/files/model.pt\n{'eval_trn': {'reward_avg': np.float64(1.40251762767451),\n              'reward_avg_episodes': np.float64(294.8958740234375),\n              'eplen_avg': np.float64(210.2625),\n              'captured_avg': np.float64(31.78125)},\n 'eval_tst': None}",
        "return_code": 0
      },
      {
        "reward_avg": 1.228218935437719,
        "reward_avg_episodes": 293.17151331018516,
        "eplen_avg": 238.69753086419752,
        "captured_avg": 31.91358024691358,
        "num_parameters": 119383,
        "model_loaded_path": "wandb/latest-run/files/model.pt",
        "stdout_tail": "  (action_select): Linear(in_features=64, out_features=18, bias=True)\n  (value_function): Linear(in_features=64, out_features=1, bias=True)\n)\nNumber of parameters: 119383\nModel loaded: wandb/latest-run/files/model.pt\n{'eval_trn': {'reward_avg': np.float64(1.228218935437719),\n              'reward_avg_episodes': np.float64(293.17151331018516),\n              'eplen_avg': np.float64(238.69753086419752),\n              'captured_avg': np.float64(31.91358024691358)},\n 'eval_tst': None}",
        "return_code": 0
      },
      {
        "reward_avg": 1.1681636334876868,
        "reward_avg_episodes": 287.3956575920245,
        "eplen_avg": 246.0245398773006,
        "captured_avg": 31.47239263803681,
        "num_parameters": 119383,
        "model_loaded_path": "wandb/latest-run/files/model.pt",
        "stdout_tail": "  (action_select): Linear(in_features=64, out_features=18, bias=True)\n  (value_function): Linear(in_features=64, out_features=1, bias=True)\n)\nNumber of parameters: 119383\nModel loaded: wandb/latest-run/files/model.pt\n{'eval_trn': {'reward_avg': np.float64(1.1681636334876868),\n              'reward_avg_episodes': np.float64(287.3956575920245),\n              'eplen_avg': np.float64(246.0245398773006),\n              'captured_avg': np.float64(31.47239263803681)},\n 'eval_tst': None}",
        "return_code": 0
      }
    ],
    "average": {
      "reward_avg": 1.2663000655333052,
      "reward_avg_episodes": 291.82101497521575,
      "eplen_avg": 231.66152358049936,
      "captured_avg": 31.722407628316795,
      "num_successful_runs": 3
    }
  },
  "test": {
    "runs": [
      {
        "reward_avg": 0.22100572296493048,
        "reward_avg_episodes": 67.11001006518404,
        "eplen_avg": 303.65644171779144,
        "captured_avg": 11.773006134969325,
        "num_parameters": 119383,
        "model_loaded_path": "wandb/latest-run/files/model.pt",
        "stdout_tail": "  (action_select): Linear(in_features=64, out_features=18, bias=True)\n  (value_function): Linear(in_features=64, out_features=1, bias=True)\n)\nNumber of parameters: 119383\nModel loaded: wandb/latest-run/files/model.pt\n{'eval_trn': {'reward_avg': np.float64(0.22100572296493048),\n              'reward_avg_episodes': np.float64(67.11001006518404),\n              'eplen_avg': np.float64(303.65644171779144),\n              'captured_avg': np.float64(11.773006134969325)},\n 'eval_tst': None}",
        "return_code": 0
      },
      {
        "reward_avg": 0.2097494513420349,
        "reward_avg_episodes": 66.25782448236197,
        "eplen_avg": 315.88957055214723,
        "captured_avg": 12.0,
        "num_parameters": 119383,
        "model_loaded_path": "wandb/latest-run/files/model.pt",
        "stdout_tail": "  (action_select): Linear(in_features=64, out_features=18, bias=True)\n  (value_function): Linear(in_features=64, out_features=1, bias=True)\n)\nNumber of parameters: 119383\nModel loaded: wandb/latest-run/files/model.pt\n{'eval_trn': {'reward_avg': np.float64(0.2097494513420349),\n              'reward_avg_episodes': np.float64(66.25782448236197),\n              'eplen_avg': np.float64(315.88957055214723),\n              'captured_avg': np.float64(12.0)},\n 'eval_tst': None}",
        "return_code": 0
      },
      {
        "reward_avg": 0.21166671832273806,
        "reward_avg_episodes": 65.41428417369632,
        "eplen_avg": 309.04294478527606,
        "captured_avg": 11.693251533742332,
        "num_parameters": 119383,
        "model_loaded_path": "wandb/latest-run/files/model.pt",
        "stdout_tail": "  (action_select): Linear(in_features=64, out_features=18, bias=True)\n  (value_function): Linear(in_features=64, out_features=1, bias=True)\n)\nNumber of parameters: 119383\nModel loaded: wandb/latest-run/files/model.pt\n{'eval_trn': {'reward_avg': np.float64(0.21166671832273806),\n              'reward_avg_episodes': np.float64(65.41428417369632),\n              'eplen_avg': np.float64(309.04294478527606),\n              'captured_avg': np.float64(11.693251533742332)},\n 'eval_tst': None}",
        "return_code": 0
      }
    ],
    "average": {
      "reward_avg": 0.21414063087656782,
      "reward_avg_episodes": 66.26070624041411,
      "eplen_avg": 309.52965235173826,
      "captured_avg": 11.822085889570552,
      "num_successful_runs": 3
    }
  },
  "comparison": {
    "delta": {
      "reward_avg": -1.0521594346567373,
      "reward_avg_episodes": -225.56030873480165,
      "eplen_avg": 77.8681287712389,
      "captured_avg": -19.900321738746243
    },
    "ratio": {
      "reward_avg": 0.1691073361718433,
      "reward_avg_episodes": 0.22705940573211153,
      "eplen_avg": 1.3361288813426142,
      "captured_avg": 0.3726730337774755
    }
  }
}